---
import { Icon } from "astro-icon";

export type Props = {
  href: string;
  isExternal?: boolean | undefined | null;
  class?: string;
  skin?: "default" | "cta";
  iconName?: string | undefined | null;
  iconPosition?: "left" | "right" | undefined;
};

const {
  href,
  isExternal,
  class: className,
  skin = "default",
  iconPosition = "left",
  iconName,
} = Astro.props as Props;
const isCurrent = href === Astro.url.href || href === Astro.url.pathname;
// const isSubPath =
//   href.length > 1 &&
//   href.startsWith("/") &&
//   href.endsWith("/") &&
//   Astro.url.pathname.startsWith(href);

const extraProps = isExternal
  ? {
      target: "_blank",
      rel: "noopener noreferrer",
    }
  : {};

const classNameSet = new Set<string>();
if (skin === "default") {
  classNameSet.add("underline-offset-4 decoration-double hover:underline");
} else if (skin === "cta") {
  classNameSet.add("py-3 px-8 inline-block rounded-full");
  classNameSet.add("text-slate-300 bg-slate-900 hover:bg-slate-700");
  classNameSet.add(
    "dark:text-slate-700 dark:bg-slate-50 dark:hover:bg-slate-300"
  );
}

if (iconName) {
  classNameSet.add("flex items-center gap-1");
}
---

<a
  href={href}
  aria-current={isCurrent ? "page" : undefined}
  class:list={[className, classNameSet, { "font-bold": isCurrent }]}
  {...extraProps}
>
  {
    iconName && iconPosition === "left" ? (
      <Icon class="inline-block w-4 h-4" name={iconName} />
    ) : null
  }
  <slot />
  {
    iconName && iconPosition === "right" ? (
      <Icon class="inline-block w-4 h-4" name={iconName} />
    ) : null
  }
</a>
