---
import * as techSkills from "./teck-skills";
import TechCard from "./tech-card.astro";
import { Tech, TechCategory, TechProficiencyLevel } from "./tech-skills.types";
import {
  techProficiencyLevelColorMap,
  categoryBgAndTextClasses,
} from "./skill-color-map";
type LevelWiseData = {
  name: string;
  level: TechProficiencyLevel;
  skills: Tech[];
};
const levelExpert: LevelWiseData = {
  name: "Expert",
  level: TechProficiencyLevel.Expert,
  skills: [],
};
const levelAdvanced: LevelWiseData = {
  name: "Advanced",
  level: TechProficiencyLevel.Advanced,
  skills: [],
};
const levelIntermediate: LevelWiseData = {
  name: "Intermediate",
  level: TechProficiencyLevel.Intermediate,
  skills: [],
};

const levelBeginner: LevelWiseData = {
  name: "Beginner",
  level: TechProficiencyLevel.Beginner,
  skills: [],
};
const skills = Object.values(techSkills) as Tech[];
skills.forEach((skill) => {
  if (skill.level === TechProficiencyLevel.Expert) {
    levelExpert.skills.push(skill);
  } else if (skill.level === TechProficiencyLevel.Advanced) {
    levelAdvanced.skills.push(skill);
  } else if (skill.level === TechProficiencyLevel.Intermediate) {
    levelIntermediate.skills.push(skill);
  } else if (skill.level === TechProficiencyLevel.Beginner) {
    levelBeginner.skills.push(skill);
  }
});
const skillSections = [
  levelExpert,
  levelAdvanced,
  levelIntermediate,
  levelBeginner,
];
const categoryLegend = [
  {
    category: TechCategory.Language,
    text: "Language",
  },
  {
    category: TechCategory.FrontEndFramework,
    text: "Front End Framework",
  },
  {
    category: TechCategory.RenderingFramework,
    text: "Rendering Framework",
  },
  {
    category: TechCategory.BackEndFramework,
    text: "Backend Framework",
  },
  {
    category: TechCategory.DataStore,
    text: "Data store",
  },
  {
    category: TechCategory.MobileAndDesktop,
    text: "Mobile & Desktop",
  },
  {
    category: TechCategory.Testing,
    text: "Testing",
  },
  {
    category: TechCategory.BuildTools,
    text: "Build Tools",
  },
  {
    category: TechCategory.MonoRepoTools,
    text: "Mono Repo Tools",
  },
  {
    category: TechCategory.Misc,
    text: "Misc",
  },
];
---

<h2 class="text-6xl my-6">Tech Skills</h2>
<ul
  class:list={[
    "grid gap-4 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4",
    "border-2 p-4 my-6",
  ]}
>
  {
    categoryLegend.map(({ category, text }) => (
      <li>
        <span
          class:list={[
            "w-6 h-6 inline-block text-center",
            categoryBgAndTextClasses[category],
          ]}
        >
          &nbsp;
        </span>
        <span>{text}</span>
      </li>
    ))
  }
</ul>
<div class="grid gap-4 grid-cols-[20px_1fr]">
  {
    skillSections.map((skillSection, i) => (
      <>
        <div
          class:list={[
            "w-8 font-bold flex flex-col items-center justify-center",
            techProficiencyLevelColorMap[skillSection.level],
          ]}
          title={skillSection.name}
        >
          {new Array(5 - i).fill(1).map((_) => (
            <span>&#9733;</span>
          ))}
        </div>
        <ul class="p-4 flex-auto gap-4 grid grid-cols-[repeat(auto-fit,_minmax(140px,1fr))]">
          {skillSection.skills.map((skill) => (
            <li>
              <TechCard tech={skill} />
            </li>
          ))}
        </ul>
      </>
    ))
  }
</div>
