---
import { siteHome, siteBlog, LinkConfig } from "../constants/links";
import Link from "./link.astro";
import { Icon } from "astro-icon";
const linkConfig: LinkConfig[] = [siteHome, siteBlog];
type Props = {
  class?: string;
};
const { class: className } = Astro.props;
---

<header
  class:list={[
    "border-b border-slate-300 dark:border-slate-600 flex justify-between sticky top-0",
    "drop-shadow-xl",
    className,
  ]}
>
  <nav>
    <ul class="flex gap-x-2.5">
      {
        linkConfig.map((link) => (
          <li>
            <Link
              isExternal={link.isExternal}
              href={link.href}
              class="inline-block p-4"
            >
              {link.text}
            </Link>
          </li>
        ))
      }
    </ul>
  </nav>
  <div class="flex items-center">
    <button
      disabled
      id="theme-switcher"
      class="p-2 w-12 h-12"
      title="Toggle Theme"
    >
      <span class="switch-to-dark-theme">
        <Icon name="carbon:moon" />
        <span class="sr-only">Switch to Dark Theme</span>
      </span>
      <span class="switch-to-light-theme">
        <Icon name="carbon:sun" />
        <span class="sr-only">Switch to Light Theme</span>
      </span>
    </button>
  </div>
</header>

<style>
  #theme-switcher .switch-to-light-theme {
    display: none;
  }
  :global(.dark) #theme-switcher .switch-to-light-theme {
    display: initial;
  }
  :global(.dark) #theme-switcher .switch-to-dark-theme {
    display: none;
  }
</style>
<script>
  const themeSwitcher: HTMLButtonElement | null =
    document.querySelector("#theme-switcher");
  if (themeSwitcher) {
    themeSwitcher.removeAttribute("disabled");
    themeSwitcher.addEventListener("click", () => {
      const isDark = document.documentElement.classList.toggle("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
  }
</script>
