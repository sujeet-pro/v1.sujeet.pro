---
import type { InferGetStaticPropsType } from "astro";
import { getCollection } from "astro:content";
import Layout from "../../layouts/layout.astro";
import DateComponent from "../../components/date.astro";

export async function getStaticPaths() {
  const entries = await getCollection("blog");
  return entries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { entry } = Astro.props;
const {
  title,
  description,
  coverImg,
  publishedOn,
  lastUpdatedOn,
  tags,
  topics,
} = entry.data;
const { Content } = await entry.render();
---

<Layout
  sidenav={false}
  prose={true}
  title={title}
  description={description}
  image={coverImg}
  pageType="article"
  tags={[...(tags || []), ...(topics || [])]}
  publishedDate={publishedOn}
  updatedDate={lastUpdatedOn}
>
  <h1 class="text-center">{title}</h1>
  <p>{description}</p>
  <p class="flex justify-between italic font-thin">
    <span>First published on <DateComponent date={publishedOn} />.</span>
    {
      lastUpdatedOn ? (
        <span>
          Last Updated on <DateComponent date={lastUpdatedOn} />.
        </span>
      ) : null
    }
  </p>
  {
    coverImg ? (
      <img
        class="w-full max-h-96 object-cover"
        role="presentation"
        src={coverImg}
      />
    ) : null
  }
  <Content />
</Layout>
