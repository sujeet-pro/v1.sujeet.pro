---
import type { InferGetStaticPropsType, ImageMetadata } from "astro";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import Layout from "../../layouts/layout.astro";
import DateComponent from "../../components/date.astro";
import Breadcrumb from "../../components/breadcrumb.astro";
import DraftNotice from "../../components/draft-notice.astro";
import { siteBlog } from "../../constants/link-site";
import CoverImg from "../../components/cover-img.astro";

export async function getStaticPaths() {
  const entries = await getCollection("blog");
  return entries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { entry } = Astro.props;
const {
  title,
  description,
  thumbnail,
  cover,
  coverAlt,
  publishedOn,
  lastUpdatedOn,
  tags,
  topics,
  isDraft,
} = entry.data;
const { Content } = await entry.render();
---

<Layout
  article={true}
  title={title}
  description={description}
  image={thumbnail}
  pageDetails={{
    type: "article",
    tags: [...(tags || []), ...(topics || [])],
    publishedDate: publishedOn,
    updatedDate: lastUpdatedOn || null,
  }}
  noIndex={isDraft}
>
  <Breadcrumb links={[siteBlog]} currentPageTitle={title} slot="pre-article" />
  <DraftNotice showDraft={isDraft} slot="pre-article" />
  <h1 class="text-center font-normal">{title}</h1>
  <p class="text-3xl">{description}</p>
  <p class="flex flex-col sm:flex-row justify-between italic font-thin">
    <span>First published on <DateComponent date={publishedOn} />.</span>
    {
      lastUpdatedOn ? (
        <span>
          Last Updated on <DateComponent date={lastUpdatedOn} />.
        </span>
      ) : null
    }
  </p>
  <CoverImg src={cover} alt={coverAlt} />
  <Content />
</Layout>
